<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{02C0D694-B363-4DE1-ACC7-D66EB669378B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>PMStockQuote</RootNamespace>
    <AssemblyName>PMStockQuote</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="ExcelDna.Integration">
      <HintPath>..\packages\Excel-DNA.Lib.0.32.0\lib\ExcelDna.Integration.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL">
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AddIn.cs" />
    <Compile Include="Ribbon.cs" />
    <Compile Include="TimeoutWatch.cs" />
    <Compile Include="UserDefinedFunctions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="LICENSE.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="PMStockQuote.dna">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="README.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Include="Install32.bat">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Install64.bat">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
    <None Include="PMStockQuote.xlsx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>echo Build 32-bit version. using ExcelDna.xll
copy "$(SolutionDir)Packages\Excel-DNA.0.32.0\tools\ExcelDna.xll" "$(TargetDir)PMStockQuote.xll"
"$(SolutionDir)Packages\Excel-DNA.0.32.0\tools\ExcelDnaPack.exe" "$(TargetDir)PMStockQuote.dna" /O "$(TargetDir)PMStockQuote-Packed.xll" /Y
copy "$(TargetDir)PMStockQuote-Packed.xll" "$(TargetDir)PMStockQuote.xll" /Y
del "$(TargetDir)PMStockQuote-Packed.xll"

echo Build 64-bit version. using ExcelDna64.xll
copy "$(SolutionDir)Packages\Excel-DNA.0.32.0\tools\ExcelDna64.xll" "$(TargetDir)PMStockQuote64.xll"
copy "$(TargetDir)PMStockQuote.dna" "$(TargetDir)PMStockQuote64.dna" /Y
"$(SolutionDir)Packages\Excel-DNA.0.32.0\tools\ExcelDnaPack.exe" "$(TargetDir)PMStockQuote64.dna" /O "$(TargetDir)PMStockQuote64-Packed.xll" /Y
copy "$(TargetDir)PMStockQuote64-Packed.xll" "$(TargetDir)PMStockQuote64.xll" /Y
del "$(TargetDir)PMStockQuote64-Packed.xll"


</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>